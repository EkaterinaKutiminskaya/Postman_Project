{
	"info": {
		"_postman_id": "6912cf7c-f923-4a57-a799-771424766ca4",
		"name": "Postman_Project_Book_Store_v2",
		"description": "Коллекция собрана на основе Postman Interceptor с сайта [https://demoqa.com/login](https://demoqa.com/login)\n\nУдалены дополнительные и дублирующие запросы, добавлены тесты и переменные. Добавлен запрос на подтверждение авторизации Auth.\n\nЭто версия 2, так как коллекция подготовлена для запуска вручную, без тестранера, через тестранер тоже должно работать :)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23398719"
	},
	"item": [
		{
			"name": "Create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"// check that we have a username in the response",
							"pm.test(\"Body have a username\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.be.a('string');",
							"});",
							"",
							"",
							"// check that we have a status 201 in the response",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"let jsonRequest = pm.request.body;",
							"",
							"let body = JSON.parse(jsonRequest);",
							"pm.environment.set(\"userName\", body.userName);",
							"pm.environment.set(\"password\", body.password);",
							"let pass = body.password",
							"let userName = body.userName;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userName\": \"{{randomName}}\",\n    \"password\": \"{{randomPass}}\"\n}"
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/User",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User"
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateToken (when try login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 200 in the response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// check that we have a token in the response",
							"pm.test(\"Body have a token\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userName\": \"{{userName}}\",\n    \"password\": \"{{password}}\"\n}"
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/GenerateToken",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"GenerateToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"// check that user is authorized",
							"pm.test(\"Authorization completed\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.eq(true);",
							"});",
							"",
							"",
							"// check that we have a status 200 in the response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userName\": \"{{userName}}\",\n    \"password\": \"{{password}}\"\n}"
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/Authorized",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"Authorized"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a token and a userId in the response",
							"pm.test(\"Body have a token\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"    pm.expect(jsonData.userId).to.be.a('string');",
							"});",
							"",
							"//call pm.response.json() once and then access the values of the object using their keys",
							"let jsonData = pm.response.json();  ",
							"pm.environment.set(\"userId\", jsonData.userId);",
							"pm.environment.set(\"token\", jsonData.token);",
							"",
							"",
							"// check that we have a status 200 in the response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userName\": \"{{userName}}\",\n    \"password\": \"{{password}}\"\n}"
				},
				"url": {
					"raw": "https://demoqa.com/Account/v1/Login",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"Login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 200 in the response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"User has no books\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.books.length).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"Does userId exist? \" + pm.environment.has(\"userId\"));",
							"console.log(\"Does token exist? \" + pm.environment.has(\"token\"));",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/User/{{userId}}",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check how many books we have",
							"let jsonData = pm.response.json();",
							"",
							"console.log(\"Array length: \" + jsonData.books.length);",
							"",
							"pm.collectionVariables.set(\"number_of_books\", jsonData.books.length);",
							"",
							"pm.test(\"number of books\", function(){",
							"    pm.expect(jsonData.books.length).to.gt(0);",
							"});",
							"",
							"// check that we have a status 200 in the response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// set a book's isbn to the array and to the variable",
							"const response = pm.response.json();",
							"const bookIsbns = response.books.map(books => books.isbn);",
							"console.log(\"Array ISBN: \" + bookIsbns);",
							"pm.collectionVariables.set(\"bookIsbns\", bookIsbns);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add all books to the user (loop)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// add all books to the user sequentially",
							"let bookIsbns = pm.collectionVariables.get(\"bookIsbns\");",
							"let currentBookIsbn = bookIsbns.shift();",
							"",
							"console.log(\"currentBookIsbn: \" + currentBookIsbn);",
							"",
							"pm.collectionVariables.set(\"currentBookIsbn\", currentBookIsbn);",
							"pm.collectionVariables.set(\"bookIsbns\", bookIsbns);",
							"",
							"console.log(\"bookIsbns: \" + bookIsbns);",
							"",
							"if (Array.isArray(bookIsbns) && bookIsbns.length > 0) {",
							"    postman.setNextRequest(\"Add all books to the user (loop)\");",
							"} else {",
							"    postman.setNextRequest(\"Get user after Add books\");",
							"    console.log(\"All books added to user\");",
							"};",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 201 in the response",
							"if(pm.collectionVariables.get(\"bookIsbns\").length > 0) {",
							"    pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"    });",
							"} else {",
							"    pm.test.skip(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"    });",
							"};",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userId\":\"{{userId}}\",\n    \"collectionOfIsbns\":[{\"isbn\":\"{{currentBookIsbn}}\"}]\n}"
				},
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user after Add books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 200 in the response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// check that user has all books",
							"pm.test(\"User has all books\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.books.length).to.equal(pm.collectionVariables.get(\"number_of_books\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/User/{{userId}}",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 204 in the response",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					}
				],
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books?UserId={{userId}}",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					],
					"query": [
						{
							"key": "UserId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user after Delete books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 200 in the response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"User has no books\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.books.length).to.equal(0);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/User/{{userId}}",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 204 in the response",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/User/{{userId}}",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user after Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check that we have a status 401 in the response",
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.environment.unset(\"userName\");",
							"pm.environment.unset(\"password\");",
							"pm.environment.unset(\"userId\");",
							"pm.environment.unset(\"token\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Linux\""
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "https://demoqa.com/Account/v1/User/{{userId}}",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "number_of_books",
			"value": ""
		},
		{
			"key": "bookIsbns",
			"value": ""
		},
		{
			"key": "currentBookIsbn",
			"value": ""
		}
	]
}